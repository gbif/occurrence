<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.gbif.occurrence</groupId>
    <artifactId>occurrence-motherpom</artifactId>
    <version>0.145-SNAPSHOT</version>
  </parent>

  <artifactId>occurrence-cli</artifactId>
  <packaging>jar</packaging>

  <name>Occurrence CLI</name>

  <distributionManagement>
    <site>
      <id>gh-pages</id>
      <url>http://gbif.github.io/occurrence/${project.artifactId}/</url>
    </site>
  </distributionManagement>

  <properties>
    <!-- have to match gbif-cli version -->
    <guava.version>23.0</guava.version>
    <wagon-ssh.version>2.4</wagon-ssh.version>
    <main.basedir>${project.parent.basedir}</main.basedir>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>${wagon-ssh.version}</version>
      </extension>
    </extensions>
    <plugins>
      <!-- Override default configuration to fix compilation error:
     Failed to load existing service definition files: java.nio.file.NoSuchFileException:
     .../occurrence/occurrence-cli/target/classes/META-INF/services/org.gbif.cli.Command -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration combine.self="override">
          <source>1.8</source>
          <target>1.8</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>core-site.xml</exclude>
                <exclude>hbase-site.xml</exclude>
                <exclude>mapred-site.xml</exclude>
                <exclude>yarn-site.xml</exclude>
                <exclude>registry-sync.properties</exclude>
                <exclude>*logback.xml</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.gbif.cli.Application</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>http://repository.gbif.org/content/groups/gbif</url>
    </repository>
    <repository>
      <id>gbif-thirdparty</id>
      <url>http://repository.gbif.org/content/repositories/thirdparty/</url>
    </repository>
    <repository>
      <id>cloudera</id>
      <url>http://repository.cloudera.com/artifactory/cloudera-repos/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-guava</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <!-- This dependency is needed for the JsonIgnore annotations on the configuration objects. gbif-cli uses
           Jackson 2 because only that supports YAML so we have to use the annotations from Jackson 2 -->
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <!--force jackson-databind to match jackson-annotations-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-client</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-framework</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
    </dependency>
    <!-- mvn dep:analyze gives false positive here -->
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>amqp-client</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <!--
           This has an explicit compile time dependency even though it is only used at runtime.
           The assembly:plugin seems to not process META-INF/services files for runtime dependency but that's
           needed to be automatically found. One way of doing it would be to explicitly request an
           ApacheValidatorFactory but that too implies a compile time dependency.
           See http://blog.xebia.com/2011/07/20/jar-with-deps-dont-like-meta-infservices/ for more details.
           Their solutions require custom POM work on the client side. So changing this from runtime to compile seems to
           be the safest and easiest solution for now.
      -->
      <groupId>org.apache.bval</groupId>
      <artifactId>bval-jsr303</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.gbif.registry</groupId>
      <artifactId>registry-ws-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-common-ws</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.common</groupId>
      <artifactId>gbif-cli</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.common</groupId>
      <artifactId>gbif-postal-service</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>jackson-datatype-guava</artifactId>
          <groupId>com.fasterxml.jackson</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-registry-sync</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-search</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif.pipelines</groupId>
      <artifactId>common</artifactId>
    </dependency>

    <!-- false positive from maven dep:analyze -->
    <dependency>
      <groupId>org.kohsuke.metainf-services</groupId>
      <artifactId>metainf-services</artifactId>
      <!-- This is the proper declaration. For details see the homepage of the project. -->
      <optional>true</optional>
    </dependency>

    <!-- false positive from mvn dep:analyze -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <!-- false positive from mvn dep:analyze -->
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <!-- false positive from mvn dep:analyze -->
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-ganglia</artifactId>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>crawler-dev</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <configuration>
              <fromFile>${project.build.directory}/${project.artifactId}.jar</fromFile>
              <url>scp://crap@cli1.gbif-dev.org/home/crap/lib</url>
            </configuration>
            <executions>
              <execution>
                <id>deploy-crawler</id>
                <phase>install</phase>
                <goals>
                  <goal>upload-single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
