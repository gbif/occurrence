<?xml version="1.0" encoding="utf-8"?>
<workflow-app name="${occurrence.environment}-${table_name}-download-${download_key}" xmlns="uri:oozie:workflow:0.4.5">

  <global>
    <job-tracker>${hadoop.jobtracker}</job-tracker>
    <name-node>${hdfs.namenode}</name-node>
    <configuration>
      <property>
        <name>oozie.launcher.mapreduce.task.classpath.user.precedence</name>
        <value>true</value>
      </property>
      <property>
        <name>oozie.launcher.mapred.job.queue.name</name>
        <value>download-admin</value>
      </property>
      <property>
        <name>oozie.launcher.mapreduce.map.memory.mb</name>
        <value>${oozie.launcher.mapreduce.map.memory.mb}</value>
      </property>
    </configuration>
  </global>

  <start to="download_prepare"/>

  <action name="download_prepare">
    <java>
      <main-class>org.gbif.occurrence.download.oozie.DownloadPrepareAction</main-class>
      <arg>${gbif_filter}</arg>
      <arg>${download_key}</arg>
      <arg>${download_format}</arg>
      <arg>${core_term_name}</arg>
      <arg>${wf:appPath()}</arg>
      <capture-output/>
    </java>

    <ok to="download_size_decision"/>
    <error to="notify-error"/>
  </action>

  <decision name="download_size_decision">
    <switch>
      <case to="species_list_download">
        ${(download_format eq 'SPECIES_LIST')}
      </case>
      <case to="sql_download">
        ${(download_format eq 'SQL_TSV_ZIP')}
      </case>
      <!-- All Avro downloads are done through Hive queries -->
      <case to="simple_avro_download">
        ${(download_format eq 'SIMPLE_AVRO')}
      </case>
      <case to="simple_with_verbatim_avro_download">
        ${(download_format eq 'SIMPLE_WITH_VERBATIM_AVRO')}
      </case>
      <case to="map_of_life_download">
        ${(download_format eq 'MAP_OF_LIFE')}
      </case>
      <case to="bionomia_download">
        ${(download_format eq 'BIONOMIA')}
      </case>
      <!-- All Parquet downloads are done through Hive queries -->
      <case to="simple_parquet_download">
        ${(download_format eq 'SIMPLE_PARQUET')}
      </case>
      <!-- it's a small download -->
      <case to="from_elastic_download">
        ${wf:actionData('download_prepare')['is_small_download']}
      </case>
      <!-- it's a large download -->
      <case to="simple_csv_download">
        ${!wf:actionData('download_prepare')['is_small_download'] and (download_format eq 'SIMPLE_CSV')}
      </case>
      <case to="dwca_download">
        ${!wf:actionData('download_prepare')['is_small_download'] and (download_format eq 'DWCA')}
      </case>
      <default to="notify-error"/>
    </switch>
  </decision>

  <action name="from_elastic_download">
    <java>
      <main-class>org.gbif.occurrence.download.oozie.FromSearchDownloadAction</main-class>
      <arg>${download_format}</arg>
      <arg>${wf:actionData('download_prepare')['search_query']}</arg>
      <arg>${wf:actionData('download_prepare')['download_key']}</arg>
      <arg>${gbif_filter}</arg>
      <arg>${wf:actionData('download_prepare')['download_table_name']}</arg>
      <arg>${gbif_user}</arg>
      <arg>${core_term_name}</arg>
      <arg>${wf:actionData('download_prepare')['verbatim_extensions']}</arg>
    </java>

    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="simple_csv_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/simple-csv</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="simple_avro_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/simple-avro</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="simple_with_verbatim_avro_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/simple-with-verbatim-avro</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="map_of_life_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/map-of-life</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="bionomia_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/bionomia</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="kill"/>
  </action>

  <action name="simple_parquet_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/simple-parquet</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="dwca_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/dwca</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['verbatim_extensions']}</value>
        </property>
        <property>
          <name>has_verbatim_extensions</name>
          <value>${wf:actionData('download_prepare')['has_verbatim_extensions']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
        <property>
          <name>base_wf_path</name>
          <value>${wf:appPath()}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="species_list_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/species-list</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="sql_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/${wf_prefix}-download-workflows-${occurrence.environment}/download-workflow/sql-tsv</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>core_term_name</name>
          <value>${wf:actionData('download_prepare')['core_term_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>user_sql</name>
          <value>${wf:actionData('download_prepare')['user_sql']}</value>
        </property>
        <property>
          <name>user_sql_where</name>
          <value>${wf:actionData('download_prepare')['user_sql_where']}</value>
        </property>
        <property>
          <name>user_sql_header</name>
          <value>${wf:actionData('download_prepare')['user_sql_header']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="notify-error"/>
  </action>

  <action name="notify-error">
    <email xmlns="uri:oozie:email-action:0.2">
      <to>informatics@gbif.org</to>
      <subject>${occurrence.environment} download ${download_key} failed</subject>
      <body>${core_term_name} download workflow ${download_key} failed, oozie job id ${wf:id()}:[${wf:errorMessage(wf:lastErrorNode())}]</body>
    </email>
    <ok to="kill"/>
    <error to="kill"/>
  </action>

  <kill name="kill">
    <message>${core_term_name} download failed:[${wf:errorMessage(wf:lastErrorNode())}]</message>
  </kill>

  <end name="end"/>

</workflow-app>
