<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.gbif.occurrence</groupId>
    <artifactId>occurrence-motherpom</artifactId>
    <version>1.1.4-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>occurrence-download</artifactId>
  <name>Occurrence :: Download</name>
  <packaging>jar</packaging>

  <distributionManagement>
    <site>
      <id>gh-pages</id>
      <url>https://gbif.github.io/occurrence/${project.artifactId}/</url>
    </site>
  </distributionManagement>

  <properties>
    <hadoop-compress.version>2.0.1</hadoop-compress.version>
    <metrics-core.version>2.2.0</metrics-core.version>
    <log4j.version>2.23.1</log4j.version>
    <brickhouse.version>0.6.0</brickhouse.version>
    <akka-actor.version>2.6.19</akka-actor.version>
    <es.httpclient.version>4.5.10</es.httpclient.version>

    <scala-java8-compat.version>1.0.2</scala-java8-compat.version>
    <slf4j.version>2.0.7</slf4j.version>

    <!-- The timestamp is used to set the start date for the coordinator job -->
    <!-- We want the coordinator to run at 05:00 UTC -->
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd'T05:00Z'</maven.build.timestamp.format>
    <minimumMavenVersion>3.6.0</minimumMavenVersion>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources-filtered</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <!-- Shade the project into an uber jar to send to Spark -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>org/codehaus/jackson/**</exclude>
                <exclude>javax/ws/**</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <artifactSet>
                <excludes>
                  <exclude>org.apache.hadoop:*</exclude>
                  <exclude>org.gbif.occurrence:occurrence-persistence</exclude>
                </excludes>
              </artifactSet>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>org.gbif.occurrence.download.spark.GbifOccurrenceDownloads</Main-Class>
                  </manifestEntries>
                </transformer>
              </transformers>
              <relocations>
                <relocation>
                  <pattern>org.apache.curator</pattern>
                  <shadedPattern>relocated.org.apache.curator</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.guava</pattern>
                  <shadedPattern>relocated.com.google.guava</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>conf/</exclude>
            <exclude>**/config-default.xml</exclude>
            <exclude>hbase-site.xml</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-no-slf4j</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!-- Ensure only Log4J binding -->
                    <exclude>ch.qos.logback</exclude>
                    <exclude>org.slf4j:log4j-over-slf4j</exclude>
                  </excludes>
                </bannedDependencies>
                <enforceBytecodeVersion>
                  <maxJdkVersion>17</maxJdkVersion>
                </enforceBytecodeVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>${extra-enforcer-rules.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <argLine>
              --illegal-access=permit
              --add-opens java.base/java.lang=ALL-UNNAMED
              --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
              -Dillegal-access=permit
          </argLine>
        </configuration>
      </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
                <source>17</source>
                <target>17</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-api</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commmons-logging</groupId>
          <artifactId>commmons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-metadata-profile-eml</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif.registry</groupId>
      <artifactId>registry-ws-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.gbif.datacite</groupId>
          <artifactId>datacite-rest-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.gbif.registry</groupId>
          <artifactId>registry-identity</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.gbif</groupId>
          <artifactId>gbif-common-service</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.gbif.common</groupId>
          <artifactId>gbif-postal-service</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-common</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-common-ws</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
        <!-- Excluded to avoid log4j collisions in Hadoop-->
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-es-mapping</artifactId>
      <!-- Excluded to avoid log4j collisions with other dependencies in libraries-->
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-spark-udf</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.spark</groupId>
          <artifactId>spark-avro_${scala.tools.version}</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>dwc-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>dwca-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-hdfs-table</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.gbif.predicates</groupId>
      <artifactId>es-predicates</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.predicates</groupId>
      <artifactId>sql-predicates</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>

    <!-- Used during build phase only, to generate HQL scripts -->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
    </dependency>

    <!-- this needs to match cluster version -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <!--
      Note: All the following will show as false positive on dependency:analyze
      They are however needed to package in the WF to provide (e.g.) GBIF UDFs.
      The assemblies control the workflow classpath, so anything added here must be
      explicitly declared in the assembly.
      START OF WORKFLOW ONLY DEPENDENCIES
    -->
    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.hadoop</groupId>
      <artifactId>hadoop-compress</artifactId>
      <version>${hadoop-compress.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-aws</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <!-- Excluded to avoid log4j collisions with hadoop libraries, this should be provided by Hadoop at runtime-->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.klout</groupId>
      <artifactId>brickhouse</artifactId>
      <version>${brickhouse.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-exec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${metrics-core.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.ws.rs</groupId>
          <artifactId>jsr311-api</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>

    <!-- Small downloads process -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_2.12</artifactId>
      <version>${akka-actor.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang.modules</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sf.supercsv</groupId>
      <artifactId>super-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-wrangler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gbif.occurrence</groupId>
      <artifactId>occurrence-search</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-high-level-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commmons-logging</groupId>
          <artifactId>commmons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-client-sniffer</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commmons-logging</groupId>
          <artifactId>commmons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Match elasticsearch-rest-high-level-client httpclient version -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${es.httpclient.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-framework</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-recipes</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Spark -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-catalyst_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-yarn_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.iceberg</groupId>
      <artifactId>iceberg-spark-runtime-3.5_${scala.tools.version}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-java8-compat_${scala.tools.version}</artifactId>
      <version>${scala-java8-compat.version}</version>
    </dependency>

    <!-- Avro -->
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-mapred</artifactId>
      <version>${avro.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-ipc</artifactId>
      <version>${avro.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
      <scope>provided</scope>
    </dependency>


    <!-- Test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>elasticsearch</artifactId>
    </dependency>
  </dependencies>
</project>
